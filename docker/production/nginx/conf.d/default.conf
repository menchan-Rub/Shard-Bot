server {
    listen 80;
    server_name dashboard.shardbot.com;
    
    # HTTPからHTTPSへリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name dashboard.shardbot.com;
    
    # SSL証明書の設定
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    
    # SSLの最適化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # DH パラメータ
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # HSTS (1年間有効)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # その他のセキュリティヘッダー
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # ログ設定
    access_log /var/log/nginx/dashboard.access.log;
    error_log /var/log/nginx/dashboard.error.log;
    
    # クライアントアップロード制限
    client_max_body_size 10M;
    
    # APIへのプロキシ設定
    location /api/ {
        proxy_pass http://web:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 静的ファイル
    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html;
        
        # キャッシュ設定
        location ~* \.(css|js|ico|gif|jpg|jpeg|png|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }
} 